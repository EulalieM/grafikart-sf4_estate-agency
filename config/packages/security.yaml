security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    password_hashers:
        # this internal class is used by Symfony to represent in-memory users
        # (the 'InMemoryUser' class was introduced in Symfony 5.3.
        # In previous versions it was called 'User')
        Symfony\Component\Security\Core\User\InMemoryUser: 'auto'

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory:
                users:
                    admin: { password: '$argon2id$v=19$m=65536,t=4,p=1$3M4wBOc6cSgBPUy41ayD7w$fhUyU9Cww0n9BLR29nLYd8rFyAtAGRWYVDq8scw9lSY', roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: in_memory
            custom_authenticator: App\Security\AppCustomAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
